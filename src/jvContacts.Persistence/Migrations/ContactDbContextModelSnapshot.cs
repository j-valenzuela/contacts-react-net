// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jvContacts.Persistence.Context;

namespace jvContacts.Persistence.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    partial class ContactDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("jvContacts.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GetUtcDate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500)
                        .HasDefaultValue("");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80)
                        .HasDefaultValue("");

                    b.Property<string>("ImageUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ImageUrl")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80)
                        .HasDefaultValue("");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GetUtcDate()");

                    b.Property<string>("PhoneNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("jvContacts.Domain.Entities.Contact", b =>
                {
                    b.OwnsOne("jvContacts.Domain.ValueObjects.ContactAddress", "Address", b1 =>
                        {
                            b1.Property<Guid>("ContactId");

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(80)")
                                .HasMaxLength(80);

                            b1.Property<string>("Country")
                                .HasColumnName("Country")
                                .HasColumnType("nvarchar(80)")
                                .HasMaxLength(80);

                            b1.Property<string>("State")
                                .HasColumnName("State")
                                .HasColumnType("nvarchar(80)")
                                .HasMaxLength(80);

                            b1.Property<string>("Street1")
                                .IsRequired()
                                .HasColumnName("Street1")
                                .HasColumnType("nvarchar(80)")
                                .HasMaxLength(80);

                            b1.Property<string>("Street2")
                                .HasColumnName("Street2")
                                .HasColumnType("nvarchar(80)")
                                .HasMaxLength(80);

                            b1.Property<string>("ZipCode")
                                .HasColumnName("ZipCode")
                                .HasColumnType("nvarchar(10)")
                                .HasMaxLength(10);

                            b1.HasKey("ContactId");

                            b1.ToTable("Contacts");

                            b1.HasOne("jvContacts.Domain.Entities.Contact")
                                .WithOne("Address")
                                .HasForeignKey("jvContacts.Domain.ValueObjects.ContactAddress", "ContactId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
